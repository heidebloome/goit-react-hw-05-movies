{"version":3,"file":"static/js/559.9f8390ee.chunk.js","mappings":"8OAEaA,EAAOC,EAAAA,GAAAA,GAAH,gEAKJC,EAAOD,EAAAA,GAAAA,EAAH,kCACX,SAAAE,GAAK,OACPA,EAAMC,IACNC,EAAAA,EAAAA,IADA,wD,6BCJEC,EAAa,IAAIC,EAAAA,EAuCvB,EArCgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACNH,GAAa,GACb,IACIN,EAAWU,kBAAkBH,GAASI,MAAK,SAAAC,GAC3CR,EAAWQ,MAEb,MAAOC,GACLC,QAAQC,IAAIF,GAEhBP,GAAa,KACd,CAACC,KAGA,8BAEIF,GACK,SAACW,EAAA,EAAD,KACE,SAACtB,EAAD,UACqB,IAAnBS,EAAQc,QACH,+CACAd,EAAQe,KAAI,SAAAC,GACV,OACI,2BACI,UAACvB,EAAD,CAAME,GAAC,EAAP,UAASqB,EAAGC,OAAZ,QACA,SAACxB,EAAD,UAAOuB,EAAGE,YAFLF,EAAGG,a,4LChC/BrB,EAAb,wFACgB,kCADhB,gDAEe,qCAFf,qFAII,oGAC2BsB,IAAAA,IAAA,kBAAaC,KAAb,oDAAyDA,KAAzD,QAD3B,cACUC,EADV,yBAEWA,EAASb,KAAKc,SAFzB,gDAJJ,wHASI,WAAwBJ,GAAxB,uFAC2BC,IAAAA,IAAA,kBAAaC,KAAb,uBAAoCF,EAApC,4BAAkDE,KAAlD,QAD3B,cACUC,EADV,yBAEWA,EAASb,MAFpB,gDATJ,sHAcI,WAAqBU,GAArB,uFAC2BC,IAAAA,IAAA,kBAAaC,KAAb,uBAAoCF,EAApC,oCAA0DE,KAA1D,QAD3B,cACUC,EADV,yBAEWA,EAASb,KAAKe,MAFzB,gDAdJ,yHAmBI,WAAwBL,GAAxB,uFAC2BC,IAAAA,IAAA,kBAAaC,KAAb,uBAAoCF,EAApC,oCAA0DE,KAA1D,QAD3B,cACUC,EADV,yBAEWA,EAASb,KAAKc,SAFzB,gDAnBJ,yHAwBI,WAAwBE,GAAxB,uFAC2BL,IAAAA,IAAA,kBAAaC,KAAb,8CAAmDA,KAAnD,wBAA0EI,IADrG,cACUH,EADV,yBAEWA,EAASb,KAAKc,SAFzB,gDAxBJ","sources":["pages/MoviesPage/Review/Reviews.styled.jsx","pages/MoviesPage/Review/Reviews.jsx","services/api.service.js"],"sourcesContent":["import styled, {css} from 'styled-components';\n\nexport const List = styled.ul`\n    padding: 0;\n    list-style: none;\n`;\n\nexport const Text = styled.p`\n    ${props =>\n    props.b &&\n    css`\n      font-weight: 700;\n    `};\n`;","import {useEffect, useState} from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { List, Text } from \"./Reviews.styled\";\nimport Loader from \"components/Loader/Loader\";\nimport { ApiService } from \"services/api.service\";\nconst apiService = new ApiService();\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setIsLoading(true);\n        try {\n            apiService.fetchMovieReviews(movieId).then(data => {\n            setReviews(data);\n        })\n        } catch (error) {\n            console.log(error);\n        }\n        setIsLoading(false);\n    }, [movieId]);\n\n    return (\n        <>\n        {\n            isLoading\n                ?<Loader />\n                : (<List>\n                    {reviews.length === 0\n                        ? <div>No reviews yet...</div>\n                        : reviews.map(el => {\n                            return (\n                                <li key={el.id}>\n                                    <Text b>{el.author}:</Text>\n                                    <Text>{el.content}</Text>\n                                </li>)\n                        })}\n                </List>)}\n        </>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nexport class ApiService {\n    #BASE_URL = 'https://api.themoviedb.org/3/';\n    #API_KEY = '5bb22c57348a36de617928c842cde881';\n\n    async fetchTrendingMovies() {\n        const response = await axios.get(`${this.#BASE_URL}trending/movie/day?api_key=${this.#API_KEY}`);\n        return response.data.results;\n    };\n\n    async fetchMovieDetails(id) {\n        const response = await axios.get(`${this.#BASE_URL}movie/${id}?api_key=${this.#API_KEY}`);\n        return response.data;\n    }\n\n    async fetchMovieCast(id) {\n        const response = await axios.get(`${this.#BASE_URL}movie/${id}/credits?api_key=${this.#API_KEY}`);\n        return response.data.cast;\n    }\n\n    async fetchMovieReviews(id) {\n        const response = await axios.get(`${this.#BASE_URL}movie/${id}/reviews?api_key=${this.#API_KEY}`);\n        return response.data.results;\n    }\n\n    async fetchMoviesByName(searchQuery) {\n        const response = await axios.get(`${this.#BASE_URL}search/movie?api_key=${this.#API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n    }\n}"],"names":["List","styled","Text","props","b","css","apiService","ApiService","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieReviews","then","data","error","console","log","Loader","length","map","el","author","content","id","axios","this","response","results","cast","searchQuery"],"sourceRoot":""}